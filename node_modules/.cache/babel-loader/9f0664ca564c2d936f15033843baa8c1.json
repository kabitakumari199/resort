{"ast":null,"code":"import _objectSpread from \"/var/www/html/resort/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/var/www/html/resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false,\n      loading: true\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = evnet.type === 'checkbox' ? target.checked : target.value;\n      const type = event.target.type;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.filterRooms = () => {\n      console.log('Hello');\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    console.log(rooms);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      }); //console.log(room);\n\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.children, \")\");\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/var/www/html/resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","loading","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","evnet","checked","name","setState","filterRooms","console","log","componentDidMount","formatData","filter","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\n\nconst RoomContext = React.createContext();\n\n class RoomProvider extends Component  {\n        \n      state = {\n        rooms:[],\n        sortedRooms:[],\n        featuredRooms:[],\n        type:'all',\n        capacity:1,\n        price:0,\n        minPrice:0,\n        maxPrice:0,\n        minSize:0,\n        maxSize:0,\n        breakfast:false,\n        pets:false,\n        loading:true\n      }    \n      componentDidMount(){\n        let rooms = this.formatData(items);\n        console.log(rooms);\n        let featuredRooms = rooms.filter(room => room.featured === true );\n        let maxPrice = Math.max(...rooms.map(item => item.price));\n        let maxSize = Math.max(...rooms.map(item => item.size));\n        this.setState({rooms,featuredRooms,sortedRooms:rooms,loading:false,price:maxPrice,maxPrice,maxSize});\n        \n      }\n      formatData(items){\n        let tempItems = items.map(item => {\n        let id = item.sys.id;\n        let images = item.fields.images.map(image => image.fields.file.url);\n        let room = {...item.fields,images,id};\n        //console.log(room);\n        return room;\n        });\n        return tempItems;\n      }\n      getRoom = (slug) => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug === slug);\n        return room;\n      }\n      handleChange = event => {\n       const target = event.target;\n       const value = evnet.type==='checkbox' ? target.checked :target.value\n       const type = event.target.type;\n       const name = event.target.name;\n       this.setState({\n       [name]:value\n       });\n       \n      }\n      filterRooms = () => {\n        console.log('Hello');\n      }\n      render(){\n        return(\n          <RoomContext.Provider value={{...this.state,getRoom:this.getRoom,handleChange:this.handleChange}}>\n           {this.props.children})\n          </RoomContext.Provider>\n        )\n      }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component){\n    return function ConsumerWrapper(props){\n      return <RoomConsumer>\n        {value => <Component {...props} context = {value} />}\n      </RoomConsumer>\n\n    }\n}\n\nexport{RoomProvider,RoomConsumer,RoomContext};"]},"metadata":{},"sourceType":"module"}